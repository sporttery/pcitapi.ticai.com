
lua_package_path "/var/www/pcitapi.ticai.com/ticai/?.lua;;";
init_by_lua_file /var/www/pcitapi.ticai.com/lua/init.lua;
# init_worker_by_lua_file /var/www/pcitapi.ticai.com/lua/timer.lua;
server {
	server_name pcitapi.ticai.com;
	listen 80;
	root /var/www/pcitapi.ticai.com;
	set $use_timer 'true';
	charset utf8;
	location ~ \.html|js|css {
		expires 1d;
	}


	location /sub {
		access_log off;
		# curl http://pcitapi.ticai.com/sub -v
		# --检测客户端是否断开
		lua_check_client_abort on;
		content_by_lua_block {
			local cjson = require "cjson";
			local redis = require "resty.redis";
			--建立连接
			local r = redis:new();
			r:connect("127.0.0.1", 6379);
			--启动消息订阅
			local subKey =  "AWARD_RESULT"
			if ngx.var.arg_key then
				subKey = ngx.unescape_uri(ngx.var.arg_key)
			end
			local res, err = r:subscribe(subKey);
			--如果客户端意外关闭，则断开与Redis的连接并退出运行
			ngx.on_abort(function()
				r:close();
				ngx.exit(499);
			end);
			--循环接收消息
			while not ngx.worker.exiting()
			do
				repeat
					local res, err = r:read_reply();
					if err then
						break;
					end
					--接收完成后将消息发送给客户端
					-- local ok, err = ngx.say(cjson.encode(res));
					local msgData = res[3];
					local terminal_no = msgData:match("%d+");
					local award_info ;
					if terminal_no and string.len(terminal_no) > 10 then
						award_info = msgData:sub(string.len(terminal_no)+2);
					end
					local data={};
					if  award_info and string.len(award_info) > 10 then
						data = saveAwardResult(award_info,terminal_no);
					end
					data.replyData=res;
					local dataJson = cjson.encode(data);
					ngx.log(ngx.ERR,dataJson);
					ngx.say(dataJson)
					ngx.flush();
				until true
			end
		}
	}

	location ~ /api/(.*)$ {
		default_type 'application/json; charset=utf-8';
		content_by_lua_file $document_root/lua/$1.lua;
	}
	

	location / {
		default_type text/html;
		index index.html;
	}
	
	

}